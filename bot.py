import asyncioimport loggingimport configsfrom aiogram import Bot, Dispatcher, typesfrom aiogram.contrib.fsm_storage.memory import MemoryStoragefrom core.commands import set_commandsfrom core.factory import DefaultHandlersFactoryfrom aides.other import import_modulesfrom core.updates.worker import get_handled_updatesasync def main():    logging.basicConfig(        level=logging.INFO,        format="%(asctime)s - %(levelname)s - %(name)s - %(message)s",    )    bot = Bot(configs.BOT_TOKEN, parse_mode=types.ParseMode.HTML)    storage = MemoryStorage()    dp = Dispatcher(        bot=bot,        storage=storage    )    modules = import_modules(        'manage', 'checklist',        package='core.handlers.chat'    )    DefaultHandlersFactory(dp).register(        *modules    )    await set_commands(dp)    try:        await dp.start_polling(allowed_updates=get_handled_updates(dp))    finally:        await dp.storage.close()        await dp.storage.wait_closed()        await (await bot.get_session()).close()if __name__ == '__main__':    try:        asyncio.run(main())    except(KeyboardInterrupt, SystemExit):        pass